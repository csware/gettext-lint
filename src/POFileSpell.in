#!@PYTHON@
# -*- mode: Python; coding: utf-8; -*-

# PO file spell checker
# 
# Pedro Morais <morais@kde.org>
# José Nuno Pires <jncp@netcabo.pt>
# João Neves <joao@silvanaves.org>
# (c) Copyright 2003, 2004
# Distributable under the terms of the GPL - see COPYING

import sys
import getopt
if not "@prefix@/share/@PACKAGE@" in sys.path:
    sys.path.append("@prefix@/share/@PACKAGE@")
from POFile import POFile
from util import Output

def usage(code = -1):
    w = sys.stderr.write
    w('Usage: POFileSpell [OPTION] <FILE>...\n')
    w('\n')
    w('Mandatory arguments to long options are mandatory '
      'for short options too.\n')
    w('\n')
    w('Options:\n')
    w('  -h, --help                 show this help\n')
    w('  -o, --overview             generate an overview file\n')
    w('  -d, --dict=<file>          load a extra dictionary file\n')
    w('      --command=<command>    command used for spellchecking\n')
    w('                             (default: "aspell --encoding=UTF-8 -l")\n')
    sys.exit(code)

try:
    opts, args = getopt.getopt(sys.argv[1:], "hod:",
                               ["help", "overview", "dict=", "command="])
except getopt.GetoptError:
    usage()
overview = None
dict = {}
spellCommand = None
for o, a in opts:
    if o in ("-h", "--help"): usage(0)
    if o in ("-o", "--overview"): overview = {}
    if o in ("-d", "--dict"):
        import os
        fn = os.path.expandvars(os.path.expanduser(a))
        words = open(fn).readlines()
        for word in words:
            word = word[:-1]
            dict[word] = word
    if o in ("--command",):            
        spellCommand = a
if len(args) < 1: usage()

tagname = "po-file-spell"
if overview != None: tagname = "po-file-spell-overview"
out = Output(tagname)
for filename in args:
    po = POFile(filename)
    if po.parse() == 0:
        sys.stderr.write('error parsing file %s\n' % filename)
    else:
        po.parseHeader()
        if spellCommand: po.spellCommand = spellCommand
        po.spell(dict)
        if len(po.spellErrors) > 0:
            if overview != None:
                for e in po.spellErrors:
                    ce = 0
                    if overview.has_key(e): ce= overview[e]
                    overview[e] = ce + 1
            else:
                out.opentag('file', {'name': filename})
                for e in po.spellErrors:
                    out.opentag('error', {}, body = e, close = 1)
                out.closetag()
if overview:
    for i in overview.iteritems():
        out.opentag('error', {'count': str(i[1])}, body = i[0], close = 1)
out.finish()
